name: ðŸ”Ž Find EBS Volume Owners

on:
  workflow_dispatch:
  schedule:
  - cron: '0 0 1 * *'

permissions:
  id-token: write
  contents: write

jobs:
  generate-csv-ebs-owners-optimizer-recommendations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.12"
          cache: "pipenv"
      - name: Install Pipenv
        run: |
          pip install pipenv
          pipenv install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@77e8c97f171499172c2f9b2ca3e028cb9db147d1 # v4.0.2
        with:
          role-to-assume: ${{secrets.AWS_COAT_GITHUB_ACTIONS_READONLY_ARN}}
          aws-region: eu-west-2
      - name: Run Python script with optional manual flag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            pipenv run python3 -m bin.find_ebs_volume_owners --run_manually
          else
            pipenv run python3 -m bin.find_ebs_volume_owners
            fi
        env:
          ADMIN_SLACK_TOKEN: ${{ secrets.ADMIN_SLACK_TOKEN }}
          RUN_MANUALLY: ${{ github.event_name == 'workflow_dispatch' }}
      - name: Upload report artifact if scheduled run
        if: github.event_name == 'schedule'
        uses: actions/upload-artifact@v4
        with:
          name: ebs-report
          path: '*.csv'
      - name: Report failure to Slack
        if: always()
        uses: ravsamhq/notify-slack-action@9e7ca9833c15237f9cb93fbbccd38e37793e79f1 # 2.5.0
        with:
          status: ${{ job.status }}
          notify_when: "failure"
          notification_title: "Failed to run Find EBS Volume Owners job"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  upload-ebs-owners-report:
    if: github.event_name == 'schedule'
    needs: generate-csv-ebs-owners-optimizer-recommendations
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ebs-report
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@77e8c97f171499172c2f9b2ca3e028cb9db147d1 # v4.0.2
        with:
          role-to-assume: ${{secrets.AWS_COAT_GITHUB_ACTIONS_REPORT_UPLOAD_ARN}}
          aws-region: eu-west-2
      - name: Upload all CSV files to S3
        run: |
          for filename in *.csv; do
            echo "Uploading $filename to S3"
            aws s3 cp "$filename" "s3://${{ secrets.S3_REPORT_BUCKET }}/ebs_waste_reports/$filename"
          done
     